@model MES_F1.Models.ViewModels.ProductionListViewModel

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

<h2>Choose production state</h2>

<form asp-action="ProductionList" method="post">
    <div>
        <label asp-for="State">Production State:</label>
        <select asp-for="State" class="form-control" required onchange="this.form.submit()">
            @foreach (var state in Enum.GetValues(typeof(MES_F1.Models.ProductionState)).Cast<MES_F1.Models.ProductionState>())
            {
                <option value="@((int)state)" selected="@(Model.State == state ? "selected" : null)">
                    @EnumHelper.GetDescription(state)
                </option>
            }
        </select>
    </div>
</form>

@if (Model.Productions != null && Model.Productions.Any())
{
    @foreach (var production in Model.Productions)
    {
        <form asp-action="ProductionSetup" method="get">
            <hr />
            <input type="hidden" name="productionId" value="@production.ProductionId" />
            <button type="submit" class="btn btn-primary">Edit</button>
            @production.Name
        </form>

        <form asp-action="RemoveProduction" method="post" onsubmit="return confirmDeletion()">
            <input type="hidden" name="productionId" value="@production.ProductionId" />
            @if (production.State == ProductionState.None)
            {
                <button type="submit" class="btn btn-danger btn-sm">Delete</button>
            }
        </form>
    }
}
else
{
    <p>No productions to show.</p>
}

<script>
    function confirmDeletion() {
        let userInput = prompt("To remove this production type: CONFIRM");
        return userInput === "CONFIRM";
    }
</script>
